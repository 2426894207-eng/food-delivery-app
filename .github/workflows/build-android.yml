name: Build Android APK

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]

jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git zip unzip openjdk-11-jdk python3-pip autoconf libtool pkg-config zlib1g-dev libncurses5-dev libncursesw5-dev libtinfo5 cmake libffi-dev libssl-dev
          pip install --upgrade pip

      - name: Install Python dependencies
        run: |
          pip install --upgrade Cython==0.29.33 wheel setuptools
          pip install buildozer

      - name: Create buildozer.spec if not exists
        run: |
          if [ ! -f buildozer.spec ]; then
            cat > buildozer.spec << EOF
[app]
title = FoodDeliveryApp
package.name = fooddelivery
package.domain = com.fooddelivery
version = 0.1
source.dir = .
entrypoint = main.py
android.permissions = INTERNET

[buildozer]
log_level = 2
warn_on_root = 0

[app:android]
requirements = python3,kivy==2.1.0,pillow,requests
android.api = 31
android.minapi = 21
android.sdk = 20
android.ndk = 23b
android.gradle_dependencies = 'com.android.support:multidex:1.0.3'

EOF
          fi

      - name: Create main.py if not exists
        run: |
          if [ ! -f main.py ]; then
            cat > main.py << EOF
from kivy.app import App
from kivy.uix.boxlayout import BoxLayout
from kivy.uix.label import Label

class FoodDeliveryApp(App):
    def build(self):
        return Label(text='Hello Food Delivery!')

if __name__ == '__main__':
    FoodDeliveryApp().run()
EOF
          fi

      - name: Initialize buildozer
        run: buildozer init

      - name: Build APK
        run: |
          buildozer android debug -v
        env:
          ANDROID_NDK_HOME: /usr/local/lib/android/sdk/ndk-bundle

      - name: Find APK file
        id: find_apk
        run: |
          APK_PATH=$(find bin -name "*.apk" | head -n 1)
          echo "APK_PATH=$APK_PATH" >> $GITHUB_ENV
          echo "::set-output name=apk_path::$APK_PATH"

      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: fooddelivery-app
          path: ${{ env.APK_PATH }}

      - name: Release APK
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{ env.APK_PATH }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}